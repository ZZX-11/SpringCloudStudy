#前端访问的端口
server.port=8000
#后期只要gateway配置外网ip即可
# 路由转发，将/member/...的请求转发了member模块
spring.cloud.gateway.routes[0].id=member
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:8001
#spring.cloud.gateway.routes[0].uri=lb://member 后期可以用应用名做路由转发
spring.cloud.gateway.routes[0].predicates[0]=Path=/member/**

## 路由转发，将/business/...的请求转发了business模块
spring.cloud.gateway.routes[1].id=business
spring.cloud.gateway.routes[1].uri=http://127.0.0.1:8002
#spring.cloud.gateway.routes[1].uri=lb://business
# 它要求请求的路径必须以"/business/"开头才能匹配到该路由规则
spring.cloud.gateway.routes[1].predicates[0]=Path=/business/**


# 路由转发，将/batch/...的请求转发了batch模块
spring.cloud.gateway.routes[2].id=batch
spring.cloud.gateway.routes[2].uri=http://127.0.0.1:8003
#spring.cloud.gateway.routes[2].uri=lb://batch
spring.cloud.gateway.routes[2].predicates[0]=Path=/batch/**



# 可以在 路由配置跨域  .[/**] 这个意思是后端所有的接口
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers =*
# 允许请求方法
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods =*
# 允许请求来源：所有的ip 可以为具体的ip或者域名
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origin-patterns=*
# 是否可以携带cookie
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials= true

spring.cloud.gateway.globalcors.cors-configurations.[/**].maxAge = 3600


